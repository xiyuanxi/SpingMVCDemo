package league.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GroupUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group_user
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group_user
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group_user
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public GroupUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group_user
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table group_user
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andGroupIdIsNull() {
			addCriterion("group_id is null");
			return (Criteria) this;
		}

		public Criteria andGroupIdIsNotNull() {
			addCriterion("group_id is not null");
			return (Criteria) this;
		}

		public Criteria andGroupIdEqualTo(Integer value) {
			addCriterion("group_id =", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotEqualTo(Integer value) {
			addCriterion("group_id <>", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdGreaterThan(Integer value) {
			addCriterion("group_id >", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("group_id >=", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdLessThan(Integer value) {
			addCriterion("group_id <", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdLessThanOrEqualTo(Integer value) {
			addCriterion("group_id <=", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdIn(List<Integer> values) {
			addCriterion("group_id in", values, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotIn(List<Integer> values) {
			addCriterion("group_id not in", values, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdBetween(Integer value1, Integer value2) {
			addCriterion("group_id between", value1, value2, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotBetween(Integer value1, Integer value2) {
			addCriterion("group_id not between", value1, value2, "groupId");
			return (Criteria) this;
		}

		public Criteria andLoginNameIsNull() {
			addCriterion("login_name is null");
			return (Criteria) this;
		}

		public Criteria andLoginNameIsNotNull() {
			addCriterion("login_name is not null");
			return (Criteria) this;
		}

		public Criteria andLoginNameEqualTo(String value) {
			addCriterion("login_name =", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotEqualTo(String value) {
			addCriterion("login_name <>", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThan(String value) {
			addCriterion("login_name >", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameGreaterThanOrEqualTo(String value) {
			addCriterion("login_name >=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThan(String value) {
			addCriterion("login_name <", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLessThanOrEqualTo(String value) {
			addCriterion("login_name <=", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameLike(String value) {
			addCriterion("login_name like", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotLike(String value) {
			addCriterion("login_name not like", value, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameIn(List<String> values) {
			addCriterion("login_name in", values, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotIn(List<String> values) {
			addCriterion("login_name not in", values, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameBetween(String value1, String value2) {
			addCriterion("login_name between", value1, value2, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginNameNotBetween(String value1, String value2) {
			addCriterion("login_name not between", value1, value2, "loginName");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordIsNull() {
			addCriterion("login_password is null");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordIsNotNull() {
			addCriterion("login_password is not null");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordEqualTo(String value) {
			addCriterion("login_password =", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordNotEqualTo(String value) {
			addCriterion("login_password <>", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordGreaterThan(String value) {
			addCriterion("login_password >", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("login_password >=", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordLessThan(String value) {
			addCriterion("login_password <", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordLessThanOrEqualTo(String value) {
			addCriterion("login_password <=", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordLike(String value) {
			addCriterion("login_password like", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordNotLike(String value) {
			addCriterion("login_password not like", value, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordIn(List<String> values) {
			addCriterion("login_password in", values, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordNotIn(List<String> values) {
			addCriterion("login_password not in", values, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordBetween(String value1, String value2) {
			addCriterion("login_password between", value1, value2, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andLoginPasswordNotBetween(String value1, String value2) {
			addCriterion("login_password not between", value1, value2, "loginPassword");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameIsNull() {
			addCriterion("display_user_name is null");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameIsNotNull() {
			addCriterion("display_user_name is not null");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameEqualTo(String value) {
			addCriterion("display_user_name =", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameNotEqualTo(String value) {
			addCriterion("display_user_name <>", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameGreaterThan(String value) {
			addCriterion("display_user_name >", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameGreaterThanOrEqualTo(String value) {
			addCriterion("display_user_name >=", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameLessThan(String value) {
			addCriterion("display_user_name <", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameLessThanOrEqualTo(String value) {
			addCriterion("display_user_name <=", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameLike(String value) {
			addCriterion("display_user_name like", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameNotLike(String value) {
			addCriterion("display_user_name not like", value, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameIn(List<String> values) {
			addCriterion("display_user_name in", values, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameNotIn(List<String> values) {
			addCriterion("display_user_name not in", values, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameBetween(String value1, String value2) {
			addCriterion("display_user_name between", value1, value2, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andDisplayUserNameNotBetween(String value1, String value2) {
			addCriterion("display_user_name not between", value1, value2, "displayUserName");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNull() {
			addCriterion("insert_date is null");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNotNull() {
			addCriterion("insert_date is not null");
			return (Criteria) this;
		}

		public Criteria andInsertDateEqualTo(Date value) {
			addCriterion("insert_date =", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotEqualTo(Date value) {
			addCriterion("insert_date <>", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThan(Date value) {
			addCriterion("insert_date >", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThanOrEqualTo(Date value) {
			addCriterion("insert_date >=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThan(Date value) {
			addCriterion("insert_date <", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThanOrEqualTo(Date value) {
			addCriterion("insert_date <=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateIn(List<Date> values) {
			addCriterion("insert_date in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotIn(List<Date> values) {
			addCriterion("insert_date not in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateBetween(Date value1, Date value2) {
			addCriterion("insert_date between", value1, value2, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotBetween(Date value1, Date value2) {
			addCriterion("insert_date not between", value1, value2, "insertDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table group_user
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table group_user
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
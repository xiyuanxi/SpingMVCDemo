package league.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TransLocationExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table trans_location
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table trans_location
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table trans_location
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public TransLocationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table trans_location
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTransactionIdIsNull() {
			addCriterion("transaction_id is null");
			return (Criteria) this;
		}

		public Criteria andTransactionIdIsNotNull() {
			addCriterion("transaction_id is not null");
			return (Criteria) this;
		}

		public Criteria andTransactionIdEqualTo(Integer value) {
			addCriterion("transaction_id =", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdNotEqualTo(Integer value) {
			addCriterion("transaction_id <>", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdGreaterThan(Integer value) {
			addCriterion("transaction_id >", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("transaction_id >=", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdLessThan(Integer value) {
			addCriterion("transaction_id <", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdLessThanOrEqualTo(Integer value) {
			addCriterion("transaction_id <=", value, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdIn(List<Integer> values) {
			addCriterion("transaction_id in", values, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdNotIn(List<Integer> values) {
			addCriterion("transaction_id not in", values, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdBetween(Integer value1, Integer value2) {
			addCriterion("transaction_id between", value1, value2, "transactionId");
			return (Criteria) this;
		}

		public Criteria andTransactionIdNotBetween(Integer value1, Integer value2) {
			addCriterion("transaction_id not between", value1, value2, "transactionId");
			return (Criteria) this;
		}

		public Criteria andIpIsNull() {
			addCriterion("ip is null");
			return (Criteria) this;
		}

		public Criteria andIpIsNotNull() {
			addCriterion("ip is not null");
			return (Criteria) this;
		}

		public Criteria andIpEqualTo(String value) {
			addCriterion("ip =", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpNotEqualTo(String value) {
			addCriterion("ip <>", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpGreaterThan(String value) {
			addCriterion("ip >", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpGreaterThanOrEqualTo(String value) {
			addCriterion("ip >=", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpLessThan(String value) {
			addCriterion("ip <", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpLessThanOrEqualTo(String value) {
			addCriterion("ip <=", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpLike(String value) {
			addCriterion("ip like", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpNotLike(String value) {
			addCriterion("ip not like", value, "ip");
			return (Criteria) this;
		}

		public Criteria andIpIn(List<String> values) {
			addCriterion("ip in", values, "ip");
			return (Criteria) this;
		}

		public Criteria andIpNotIn(List<String> values) {
			addCriterion("ip not in", values, "ip");
			return (Criteria) this;
		}

		public Criteria andIpBetween(String value1, String value2) {
			addCriterion("ip between", value1, value2, "ip");
			return (Criteria) this;
		}

		public Criteria andIpNotBetween(String value1, String value2) {
			addCriterion("ip not between", value1, value2, "ip");
			return (Criteria) this;
		}

		public Criteria andCountryIdIsNull() {
			addCriterion("country_id is null");
			return (Criteria) this;
		}

		public Criteria andCountryIdIsNotNull() {
			addCriterion("country_id is not null");
			return (Criteria) this;
		}

		public Criteria andCountryIdEqualTo(String value) {
			addCriterion("country_id =", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdNotEqualTo(String value) {
			addCriterion("country_id <>", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdGreaterThan(String value) {
			addCriterion("country_id >", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdGreaterThanOrEqualTo(String value) {
			addCriterion("country_id >=", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdLessThan(String value) {
			addCriterion("country_id <", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdLessThanOrEqualTo(String value) {
			addCriterion("country_id <=", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdLike(String value) {
			addCriterion("country_id like", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdNotLike(String value) {
			addCriterion("country_id not like", value, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdIn(List<String> values) {
			addCriterion("country_id in", values, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdNotIn(List<String> values) {
			addCriterion("country_id not in", values, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdBetween(String value1, String value2) {
			addCriterion("country_id between", value1, value2, "countryId");
			return (Criteria) this;
		}

		public Criteria andCountryIdNotBetween(String value1, String value2) {
			addCriterion("country_id not between", value1, value2, "countryId");
			return (Criteria) this;
		}

		public Criteria andCityIsNull() {
			addCriterion("city is null");
			return (Criteria) this;
		}

		public Criteria andCityIsNotNull() {
			addCriterion("city is not null");
			return (Criteria) this;
		}

		public Criteria andCityEqualTo(String value) {
			addCriterion("city =", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotEqualTo(String value) {
			addCriterion("city <>", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThan(String value) {
			addCriterion("city >", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityGreaterThanOrEqualTo(String value) {
			addCriterion("city >=", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLessThan(String value) {
			addCriterion("city <", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLessThanOrEqualTo(String value) {
			addCriterion("city <=", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityLike(String value) {
			addCriterion("city like", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotLike(String value) {
			addCriterion("city not like", value, "city");
			return (Criteria) this;
		}

		public Criteria andCityIn(List<String> values) {
			addCriterion("city in", values, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotIn(List<String> values) {
			addCriterion("city not in", values, "city");
			return (Criteria) this;
		}

		public Criteria andCityBetween(String value1, String value2) {
			addCriterion("city between", value1, value2, "city");
			return (Criteria) this;
		}

		public Criteria andCityNotBetween(String value1, String value2) {
			addCriterion("city not between", value1, value2, "city");
			return (Criteria) this;
		}

		public Criteria andIspIsNull() {
			addCriterion("isp is null");
			return (Criteria) this;
		}

		public Criteria andIspIsNotNull() {
			addCriterion("isp is not null");
			return (Criteria) this;
		}

		public Criteria andIspEqualTo(String value) {
			addCriterion("isp =", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotEqualTo(String value) {
			addCriterion("isp <>", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThan(String value) {
			addCriterion("isp >", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspGreaterThanOrEqualTo(String value) {
			addCriterion("isp >=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLessThan(String value) {
			addCriterion("isp <", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLessThanOrEqualTo(String value) {
			addCriterion("isp <=", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspLike(String value) {
			addCriterion("isp like", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotLike(String value) {
			addCriterion("isp not like", value, "isp");
			return (Criteria) this;
		}

		public Criteria andIspIn(List<String> values) {
			addCriterion("isp in", values, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotIn(List<String> values) {
			addCriterion("isp not in", values, "isp");
			return (Criteria) this;
		}

		public Criteria andIspBetween(String value1, String value2) {
			addCriterion("isp between", value1, value2, "isp");
			return (Criteria) this;
		}

		public Criteria andIspNotBetween(String value1, String value2) {
			addCriterion("isp not between", value1, value2, "isp");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNull() {
			addCriterion("insert_date is null");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNotNull() {
			addCriterion("insert_date is not null");
			return (Criteria) this;
		}

		public Criteria andInsertDateEqualTo(Date value) {
			addCriterion("insert_date =", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotEqualTo(Date value) {
			addCriterion("insert_date <>", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThan(Date value) {
			addCriterion("insert_date >", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThanOrEqualTo(Date value) {
			addCriterion("insert_date >=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThan(Date value) {
			addCriterion("insert_date <", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThanOrEqualTo(Date value) {
			addCriterion("insert_date <=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateIn(List<Date> values) {
			addCriterion("insert_date in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotIn(List<Date> values) {
			addCriterion("insert_date not in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateBetween(Date value1, Date value2) {
			addCriterion("insert_date between", value1, value2, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotBetween(Date value1, Date value2) {
			addCriterion("insert_date not between", value1, value2, "insertDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table trans_location
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table trans_location
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
package league.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GroupExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table group
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public GroupExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table group
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table group
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(Short value) {
			addCriterion("type =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(Short value) {
			addCriterion("type <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(Short value) {
			addCriterion("type >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("type >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(Short value) {
			addCriterion("type <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(Short value) {
			addCriterion("type <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<Short> values) {
			addCriterion("type in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<Short> values) {
			addCriterion("type not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(Short value1, Short value2) {
			addCriterion("type between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(Short value1, Short value2) {
			addCriterion("type not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andSubmitNameIsNull() {
			addCriterion("submit_name is null");
			return (Criteria) this;
		}

		public Criteria andSubmitNameIsNotNull() {
			addCriterion("submit_name is not null");
			return (Criteria) this;
		}

		public Criteria andSubmitNameEqualTo(String value) {
			addCriterion("submit_name =", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameNotEqualTo(String value) {
			addCriterion("submit_name <>", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameGreaterThan(String value) {
			addCriterion("submit_name >", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameGreaterThanOrEqualTo(String value) {
			addCriterion("submit_name >=", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameLessThan(String value) {
			addCriterion("submit_name <", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameLessThanOrEqualTo(String value) {
			addCriterion("submit_name <=", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameLike(String value) {
			addCriterion("submit_name like", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameNotLike(String value) {
			addCriterion("submit_name not like", value, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameIn(List<String> values) {
			addCriterion("submit_name in", values, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameNotIn(List<String> values) {
			addCriterion("submit_name not in", values, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameBetween(String value1, String value2) {
			addCriterion("submit_name between", value1, value2, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitNameNotBetween(String value1, String value2) {
			addCriterion("submit_name not between", value1, value2, "submitName");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordIsNull() {
			addCriterion("submit_password is null");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordIsNotNull() {
			addCriterion("submit_password is not null");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordEqualTo(String value) {
			addCriterion("submit_password =", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordNotEqualTo(String value) {
			addCriterion("submit_password <>", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordGreaterThan(String value) {
			addCriterion("submit_password >", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("submit_password >=", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordLessThan(String value) {
			addCriterion("submit_password <", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordLessThanOrEqualTo(String value) {
			addCriterion("submit_password <=", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordLike(String value) {
			addCriterion("submit_password like", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordNotLike(String value) {
			addCriterion("submit_password not like", value, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordIn(List<String> values) {
			addCriterion("submit_password in", values, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordNotIn(List<String> values) {
			addCriterion("submit_password not in", values, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordBetween(String value1, String value2) {
			addCriterion("submit_password between", value1, value2, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andSubmitPasswordNotBetween(String value1, String value2) {
			addCriterion("submit_password not between", value1, value2, "submitPassword");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameIsNull() {
			addCriterion("display_group_name is null");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameIsNotNull() {
			addCriterion("display_group_name is not null");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameEqualTo(String value) {
			addCriterion("display_group_name =", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameNotEqualTo(String value) {
			addCriterion("display_group_name <>", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameGreaterThan(String value) {
			addCriterion("display_group_name >", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameGreaterThanOrEqualTo(String value) {
			addCriterion("display_group_name >=", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameLessThan(String value) {
			addCriterion("display_group_name <", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameLessThanOrEqualTo(String value) {
			addCriterion("display_group_name <=", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameLike(String value) {
			addCriterion("display_group_name like", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameNotLike(String value) {
			addCriterion("display_group_name not like", value, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameIn(List<String> values) {
			addCriterion("display_group_name in", values, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameNotIn(List<String> values) {
			addCriterion("display_group_name not in", values, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameBetween(String value1, String value2) {
			addCriterion("display_group_name between", value1, value2, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andDisplayGroupNameNotBetween(String value1, String value2) {
			addCriterion("display_group_name not between", value1, value2, "displayGroupName");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNull() {
			addCriterion("insert_date is null");
			return (Criteria) this;
		}

		public Criteria andInsertDateIsNotNull() {
			addCriterion("insert_date is not null");
			return (Criteria) this;
		}

		public Criteria andInsertDateEqualTo(Date value) {
			addCriterion("insert_date =", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotEqualTo(Date value) {
			addCriterion("insert_date <>", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThan(Date value) {
			addCriterion("insert_date >", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateGreaterThanOrEqualTo(Date value) {
			addCriterion("insert_date >=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThan(Date value) {
			addCriterion("insert_date <", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateLessThanOrEqualTo(Date value) {
			addCriterion("insert_date <=", value, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateIn(List<Date> values) {
			addCriterion("insert_date in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotIn(List<Date> values) {
			addCriterion("insert_date not in", values, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateBetween(Date value1, Date value2) {
			addCriterion("insert_date between", value1, value2, "insertDate");
			return (Criteria) this;
		}

		public Criteria andInsertDateNotBetween(Date value1, Date value2) {
			addCriterion("insert_date not between", value1, value2, "insertDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table group
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table group
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}